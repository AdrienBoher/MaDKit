----------------------------------------------------------------------------------
------------------------------- MadKit ${madkit.version} -----------------------------------
------------------------------- Build ID ${build.id} ---------------------------
----------------------------------------------------------------------------------

- Short description:

MadKit is mainly a MAS library which relies on organizational concepts so 
that you could easily design artificial societies wherein autonomous agents 
interact using messages. It also contains MAS simulation authoring tools.

- Available documentation (docs directory):

	- api: Javadoc API  
	- MadKit_Tutorials: Commented source codes on specific topics 
	- A French tutorial: a general introduction to MadKit 5 and code examples

----------------------------------------------------------------------------------
------------------------------- Using MadKit ${madkit.version} -----------------------------
----------------------------------------------------------------------------------


Put ${madkit.jar.name} in your build path (e.g. in your Eclipse project) and
start programming agents.

To launch your MadKit agents, simply either
 
(1) use, anywhere, a main method with something like  :

	public static void main(String[] args) {
		String[] argss = {"--launchAgents","mypackage.myagentClass;mypackage.myOtherAgentClass"};
		Madkit.main(argss);
	}

(2) use a command line such as 

java -cp pathTo-${madkit.jar.name}:yourClassPath madkit.kernel.Madkit --launchAgents mypackage.myagentClass;mypackage.myOtherAgentClass

Other command line options are described in the API of the madkit.kernel.Madkit class

----------------------------------------------------------------------------------
------------------------------- Release notes ------------------------------------
----------------------------------------------------------------------------------


----------------------------------------------------------------------------------
------------------------------- MadKit 5.0.0.16 (alpha-16)------------------------
----------------------------------------------------------------------------------

1. Improvements:
	- Avoid an annoying bug of the open JDK that prevents MDK executable jar files to work properly 

2. API changes:
	+ 
	
	- madkit.gui.OutputPanel.print(String)
	
	~ 




----------------------------------------------------------------------------------
------------------------------- MadKit 5.0.0.15 (alpha-15)------------------------
----------------------------------------------------------------------------------

1. Improvements:
	- add The MadKit Tutorials
	- add docs/src.zip for easing the development under an IDE
	- Avoid an annoying bug of the open JDK that prevents MDK executable jar files to work properly 

2. API changes:
	+ madkit.kernel.AbstractAgent.getAgentAddressIn(String, String, String)
	+ madkit.kernel.AbstractAgent.proceedEnumMessage(EnumMessage<E>)
	+ madkit.kernel.AbstractAgent.ReturnCode.IGNORED
	+ madkit.kernel.AbstractAgent.createGUIOnStartUp()
	+ madkit.kernel.AbstractAgent.purgeMailbox()
	+ madkit.kernel.Scheduler.setState(State)
	+ madkit.action.SchedulingAction.PAUSE
	+ madkit.simulation.SimulationException
	+ madkit.i18n.ErrorMessages.MUST_BE_LAUNCHED
	
	- madkit.kernel.AbstractAgent.getMostRecentMessage()
	- madkit.kernel.AbstractAgent.ReturnCode.TERMINATED_AGENT
	- madkit.kernel.AbstractAgent.ReturnCode.NOT_AN_AGENT_CLASS
	- madkit.kernel.AbstractAgent.ReturnCode.NETWORK_DOWN
	- madkit.kernel.Scheduler.Scheduler(double, double)
	- madkit.kernel.Scheduler.getStartTime()
	- madkit.kernel.Scheduler.setStartTime(double)
	
	~ madkit.kernel.AbstractAgent.ReturnCode.INVALID_AA -> madkit.kernel.AbstractAgent.ReturnCode.INVALID_AGENT_ADDRESS


----------------------------------------------------------------------------------
------------------------------- MadKit 5.0.0.14 (alpha-14)------------------------
----------------------------------------------------------------------------------

1. Improvements:	
	- fix kernel logs on Agents' exceptions
	- add an easy way to launch one agent class with a main (see 2.)
	- Action building and related enum have been reworked and refactored
	- starting time improved
	- basic activators and probes are faster
	- madkit.action.* can be used to easily build GUI
	- a hook system has been added like in MadKit 4
	- A console agent redirecting console messages has been added (displaying message from System.out and .err)

2. API new features:
	- madkit.message. StringMessage, AgentHookMessage, EnumMessage, KernelMessage classes have been added.
	- The madkit.kernel.AbstractAgent.executeThisAgent(String[], int) method has been added

3. API Refactoring:
	- madkit.simulation.PropertyProbe has been refactored
	- madkit.messages package renamed to madkit.message
	- madkit.gui.action package moved to madkit.action
	- madkit.gui.menus package renamed to madkit.menu
	- madkit.gui.toolbars package renamed to madkit.toolbar
	- madkit.kernel.MadkitClassLoader is now visible
	Tip: To do your refactoring work at once, right click your project and select source->Organize imports

----------------------------------------------------------------------------------
------------------------------- MadKit 5.0.0.13 (alpha-13)------------------------
----------------------------------------------------------------------------------

1. Improvements:	
	- Desktop reworked (icons)
	- Java web start handling reworked
	- Probes now work on private fields 

2. API Refactoring:
	- The madkit.kernel.Probe.findFieldOn(AbstractAgent, String) method has been added
	

----------------------------------------------------------------------------------
------------------------------- MadKit 5.0.0.12 (alpha-12)------------------------
----------------------------------------------------------------------------------

1. Improvements:	
	- Desktop has been slightly reworked
	- more javadoc on the kill/launch methods and other previously uncommented methods
	- the agent's menu does not propose unachievable launch operations (agents with no default constructor)
	- The life cycle management of Agents has been reworked

2. API Refactoring:
	- madkit.gui.actions.MadkitActions has been changed to madkit.gui.actions.MadkitAction
	- the API related to multicore features has been a bit refactored
	

----------------------------------------------------------------------------------
------------------------------- MadKit 5.0.0.11 (alpha-11)------------------------
----------------------------------------------------------------------------------

1. Improvements:	
	- The jar file now correctly displays the name of the parameters when using an IDE.
	- more javadoc (feedback welcome on that subject)

2. API new features:
	- madkit.simulation.GenericBehaviorActivator.multicoreExecute() has been introduced.
	  and provides an easy way of using multicore architectures when simulating.
	  Basically it does distribute all the calls on the available processors. 


----------------------------------------------------------------------------------
------------------------------- MadKit 5.0.0.10 (alpha-10)------------------------
----------------------------------------------------------------------------------

1. Improvements:	
	- The log system has been improved again (log files, message formatting, etc.)
	- The i18n system has been reworked

2. API Refactoring:
	- madkit.kernel.GroupIdentifier has been changed to madkit.kernel.Gatekeeper
	- madkit.kernel.AbstractAgent.ReturnCode.TIME_OUT is now TIMEOUT
	
3. API new features:
	- madkit.kernel.Madkit .Option .LevelOption .BooleanOption enumerations have been created
	- the madkit.i18n package has been added
	- madkit.kernel.AbstractAgent.destroyCommunity .destroyGroup .destroyRole mesthods added
	- the madkit.agr package has been added: It defines the default communities, groups and roles of MadKit 5.

4. bug fixes :
	- a network bug which happened on group creation
	- log file creation has been fixed

----------------------------------------------------------------------------------
------------------------------- MadKit 5.0.0.9 (alpha-9)--------------------------
----------------------------------------------------------------------------------

1. Desktop mode available using --desktop
	- Offers a GUI front end with various features for the agents 

2. the log system has been fixed and works better
	- Especially, it could be used in the Agent's constructor

3. GUI tools (madkit.gui) :
	- class Utils renamed GUIToolKit
	- Actions are encapsulated in enumerations and are more easy to create and use.
	- The MKToolKit class could be used to create personalized GUI easily. 
	- New UI components: 
		- MadkitMenu (exit, restart, etc.), MadkitToolbar (used in desktop mode)

4. Building lib jar file :
	- project ant build files can now use a target named create-lib-jar which creates light jar which could be used with the MadKit desktop for instance. 
	
5. jar file could be loaded programmatically or using the Desktop.

6. API :
	- new packages under madkit.gui : actions, toolbars, menus.
	- madkit.kernel.Agent.isDaemon() has been reintroduced
	- madkit.gui.MadkitToolBar class added
	- madkit.gui.menus.MadkitMenu class added
	


----------------------------------------------------------------------------------
------------------------------- MadKit 5.0.0.8 (alpha-8)--------------------------
----------------------------------------------------------------------------------

1. API :
	- madkit.kernel.AgentAddress.getKernelAddress() has been reintroduced
	- madkit.kernel.AbstractAgent.getKernelAddress() has been created
	- madkit.kernel.Agent.broadcastMessageWithRoleAndWaitForReplies() has been created

2. GUI tools :
	- package madkit.kernel.gui has been renamed madkit.gui
	- default GUI mechanism has been completely reworked and  
		is more flexible now. See the MadKit GUI tutorial for more information

3. Logging :
	- Default warning log level value is now "FINE" instead of "INFO"
	
4. Building executable jar file :
	- project ant build files now only need the madkitkernel jar file to work
	
5. Class reloading :
	- It is now possible to reload a class, programmatically, so that new instances reflect compilation changes.
		This is convenient when designing an agent with Eclipse for instance. Just use the reload action in the agent menu. 
	
----------------------------------------------------------------------------------
------------------------------- MadKit 5.0.0.7 (alpha-7)--------------------------
----------------------------------------------------------------------------------

New features :

1. MadKit options for creating log files and directory have been reworked :
	- a boolean option named "createLogFiles" could now be used :
	public static void main(String[] args) {
		String[] argss = {"--createLogFiles","--launchAgents","mypackage.myagentClass;mypackage.myOtherAgentClass"};
		Madkit.main(argss);
	}
	This will produce log files, for each session, in the "logs" directory.
	
	This directory could be changed using the parameterized option "logDirectory" : 
	public static void main(String[] args) {
		String[] argss = {"--logDirectory","myLogDir",--createLogFiles","--launchAgents","mypackage.myagentClass;mypackage.myOtherAgentClass"};
		Madkit.main(argss);
	}

2. Agent default GUI now has various menus (log level, launching).
	These menus can be obtained for any GUI using the madkit.kernel.gui.Utils API

3. The scheduler agent now has a default GUI which could be used to do basic simulation
	controls (run, stop, speed, etc.). So, this GUI is started when using a code such as 
	launchAgent(new myScheduler(),true); 
	
----------------------------------------------------------------------------------
------------------------------- MadKit 5.0.0.6 (alpha-6)--------------------------
----------------------------------------------------------------------------------

New features :

1. The archive file of the distribution has been reworked so that it includes more
material to begin with MadKit

2. The build.xml file now also produces a jnlp file if possible so that project
can be ran online with Java Web Start

----------------------------------------------------------------------------------
------------------------------- MadKit 5.0.0.5 (alpha-5)--------------------------
----------------------------------------------------------------------------------

New features :

1. There is a new class : madkit.kernel.AgentLogger
It extends java.util.logging.Logger in order to define a new log level, namely TALK: This
one is intended to be use when you want that the message does not contain any formatting.

2. More internationalized messages.

3. The kernel jar file is now tagged with its corresponding version so that it will
be more easy to test different versions of the kernel.

----------------------------------------------------------------------------------
------------------------------- MadKit 5 alpha-4 ---------------------------------
----------------------------------------------------------------------------------

first version 5 distributed online on October 2010.
New features are detailed in the javadoc in the Madkit class 

