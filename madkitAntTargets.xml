<?xml version="1.0"?>
<!-- 
  Copyright 1998-2011 Fabien Michel, Olivier Gutknecht, Jacques Ferber
  
  This file is part of MadKit.
  
  MadKit is free software: you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.
  
  MadKit is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU Lesser General Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public License
  along with MadKit. If not, see <http://www.gnu.org/licenses/>.
 -->
 
<!-- 
 This is ant build.xml file for helping building MadKit 5 parojects
 Author: Fabien Michel
 Version: 1.0
-->

<project name="madkitAntTargets" default="create-executable-jar">
	<property name="build.dir" value="build"/>
	<property name="madkit.args" value=""/>
	<property name="jnlp.template" value="jnlp.template"/>

	<!-- - - - - - - - - - - - - - - - - - 
          target: create-lib-jar                      
         - - - - - - - - - - - - - - - - - -->
    <target name="create-lib-jar" depends="prepare-jar">
		<property name="jar.file" value="${executable.name}-lib-${version}.jar"/>
		<mkdir dir="${build.dir}"/>
		<concat destfile="${build.dir}/README" >--- This is ${project.label} MadKit library version ${version} by ${author} -----
			${line.separator}- Description  ${description}  -----
			${line.separator}- Using        This jar file is MadKit lib file: It can be used in MadKit using load jar or by putting it in the classpath of your MadKit application  -----
			${line.separator}- Technology   It runs using the MadKit multi agent kernel : http://www.madkit.org A platform for building Multi-Agent Systems Application -----
		</concat>
 		<jar destfile="${jar.file}" manifest="${build.dir}/MANIFEST.MF" compress="false" >
            <fileset dir="${build.dir}" excludes="${jar.file},mk.certif,MANIFEST.MF,madkitAntTargets.xml"/>
 		</jar>
    	<antcall target="sign-jar"/>
    </target>

	
 	<target name="create-executable-jar" depends="prepare-jar" description="Creates an executable jar of your project">
		<property name="jar.file" value="${executable.name}-${version}.jar"/>
 		<unzip src="${kernel.location}" dest="${build.dir}">
    	  <patternset>
    	    <include name="jar-in-jar-loader.zip"/>
    	  </patternset>
    	</unzip>
		<mkdir dir="${build.dir}"/>
		<concat destfile="${build.dir}/README" >--- This is ${project.label} version ${version} by ${author} -----
			${line.separator}- Description  ${description}  -----
			${line.separator}- Using        This jar file is runnable: Double click it (file execution permission is required) or use java -jar  -----
			${line.separator}- Technology   It runs using the MadKit multi agent kernel : http://www.madkit.org A platform for building Multi-Agent Systems Application -----
		</concat>
 		<copy file="${build.dir}/README" todir="."/>
	    <!-- Construct the executable jar file"-->
		<manifest file="${build.dir}/MANIFEST.MF" mode="update">
            <attribute name="Main-Class" value="org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader"/>
            <attribute name="Rsrc-Main-Class" value="madkit.kernel.Madkit"/>
            <attribute name="Class-Path" value="."/>
            <attribute name="Rsrc-Class-Path" value="./ madkitkernel-${madkit.version}.jar"/>
		</manifest>
 		<jar destfile="${jar.file}" manifest="${build.dir}/MANIFEST.MF" compress="false" >
            <zipfileset src="${build.dir}/jar-in-jar-loader.zip"/>
            <fileset dir="${build.dir}" excludes="jar-in-jar-loader.zip,${jar.file},mk.certif,MANIFEST.MF,madkitAntTargets.xml"/>
            <zipfileset file="${kernel.location}"/>
 		</jar>
 		<antcall target="jnlp"/>
		<chmod file="${jar.file}" perm="ugo+x"/>
		<delete dir="${build.dir}"/>
        <echo>
	Your project could now be ran by either${line.separator} 
    (1) double clicking the jar file !${line.separator}
    (2) using a commandline such as:	   	
		java -jar ${jar.file} [additional Madkit options and arguments]
        </echo>
	    </target>
	
	<!-- - - - - - - - - - - - - - - - - - 
		    <concat destfile="${build.dir}/onejar.mf" append="true">One-Jar-Main-Args: ${madkit.args}</concat>
		<delete dir="${build.dir}" failonerror="false"/>           
          target: compile                      
         - - - - - - - - - - - - - - - - - -->
    <target name="compile">
		 <echo>	Compiling using ${kernel.location}</echo>
    		<mkdir dir="${build.dir}"/>
		    <copy todir="${build.dir}">
		    	<fileset dir="${src.dir}" excludes="**/*.java"/><!-- getting icons or sound files -->
		  	</copy>
    		<javac
    			includeantruntime="false"
				classpath="${kernel.location}"
	   			srcdir="${src.dir}"
    			destdir="${build.dir}"
    			deprecation="on">
    		</javac>
    </target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: clean                      
         - - - - - - - - - - - - - - - - - -->
    <target name="clean">
		<delete dir="${build.dir}"/>
    	<delete file="README"/>
    </target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: prepare-jar                      
			<attribute name="Sealed" value="true"/>
    	<copy todir="${build.dir}" failonerror="false">
    		<fileset refid="resource.files"/>    		
    	</copy>
         - - - - - - - - - - - - - - - - - -->
	<target name="prepare-jar" depends="compile,build-propertiesFile" >
		<tstamp>
			<format property="timestamp.isoformat"
		    pattern="yyyy-mm-dd HH:mm:ss" locale="en"/>
		</tstamp>
		<filterset begintoken="[[" endtoken ="]]">
			<filter token="TIMESTAMP" value="${timestamp.isoformat}"/>
		</filterset>


		<manifest file="${build.dir}/MANIFEST.MF">
			<section name="MadKit-Project-Info">
				<attribute name="Project-Name" value="${project.label}"/>
				<attribute name="Project-Code-Name" value="${executable.name}"/>
				<attribute name="Project-Version" value="${version}"/>
				<attribute name="Description" value="${description}"/>
				<attribute name="Author" value="${author}"/>
				<attribute name="Built-By" value="${user.name}"/>
				<attribute name="Built-On" value="${timestamp.isoformat}"/>
				<attribute name="Built-With" value="MadKit ${madkit.version}"/>
				<attribute name="MadKit-Args" value="${madkit.args}"/>
			</section>
		</manifest>

	</target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: jar                      
         - - - - - - - - - - - - - - - - - -->
    <target name="jar" depends="prepare-jar">
		<jar destfile="${build.dir}/${jar.file}" manifest="${build.dir}/MANIFEST.MF"
			basedir="${build.dir}"
			update="false"
			index="true" 
			duplicate="preserve"
			compress="false">
		</jar>
    </target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: signjar                      
    <target name="signjar" depends="probe-for-jarsigner,jarsigner-message" if="jarsigner.present">
    	<delete file="${build.dir}/mk.certif"/>
    	<genkey keystore="${build.dir}/mk.certif" alias="${author}" storepass="mkPowa" validity="3650" dname="CN=MadKit Team, OU=MAS application, O=${author}, C=${user.country}"/>
		<signjar jar="${jar.file}" alias="${author}" storepass="mkPowa" keystore="${build.dir}/mk.certif" />           
    </target>
         - - - - - - - - - - - - - - - - - -->
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: no-jarsigner-message                      
         - - - - - - - - - - - - - - - - - -->
    <target name="jarsigner-message" unless="jarsigner.present">
		<echo>
	Build warning:
	Cannot find the jarsigner tool so that the jar could not be signed.
	This is a problem only if you want your jar to be executed online using java web start
	You can fix that by downloading and installing the JDK from Oracle
		</echo>
    </target>


	
	<target name="jnlp" depends="sign-jar" if="jarsigner.present">
		<unzip src="${kernel.location}" dest="${build.dir}">
			  <patternset>
			    <include name="${jnlp.template}"/>
			  </patternset>
		</unzip>
   		<copy tofile="${executable.name}.jnlp" file="${build.dir}/${jnlp.template}" overwrite="true">
   		  <filterchain>
   		    <expandproperties/>
   		  </filterchain>
   		</copy>	
	</target>
	
	<target name="build-propertiesFile">
		<!-- Create property file -->
		<propertyfile file="${build.dir}/project.properties" comment="${executable.name} properties file" >
		  	<entry  key="Project-Name" value="${project.label}"/>
			<entry  key="Project-Code-Name" value="${executable.name}"/>
		  	<entry  key="Project-Version" value="${version}"/>
		  	<entry  key="Description" value="${description}"/>
		  	<entry  key="Author" value="${author}"/>
		  	<entry  key="Built-By" value="${user.name}"/>
		  	<entry  key="Built-On" value="${timestamp.isoformat}"/>
		  	<entry  key="Built-With" value="MadKit version ${madkit.version}"/>
		  	<entry  key="MadKit-Args" value="${madkit.args}"/>
		</propertyfile>
	</target>	

	
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: init-security               
         - - - - - - - - - - - - - - - - - -->
	<target name="init-security">
		<property name="keystore.dir" location="${user.home}/.mk_pass" />
		<mkdir dir="${keystore.dir}" />
		<chmod file="${keystore.dir}" perm="700"/>
		<property name="keystore" location="${keystore.dir}/local.keystore" />
		<property file="${keystore.dir}/keystore.properties" />
		<property name="keystore.alias" value="MadKit-Application"/>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: get-password          
         - - - - - - - - - - - - - - - - - -->
	<target name="get-password" depends="init-security" if="jarsigner.present" unless="keystore.password">
		<input addproperty="keystore.password" >${line.separator}	First build: Please enter a password for signing MadKit jars, this will be stored in a keystore in ${keystore.dir}:</input>
		<propertyfile file="${keystore.dir}/keystore.properties" comment="${ant.project.name} signing password">		
		  	<entry  key="keystore.password" value="${keystore.password}"/>
		</propertyfile>
		<antcall target="init-security"/>
		<antcall target="create-signing-key"/>
	</target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: sign-jar                      
         - - - - - - - - - - - - - - - - - -->
    <target name="sign-jar" depends="probe-for-jarsigner,jarsigner-message,get-password" if="jarsigner.present">
		<signjar jar="${jar.file}" alias="${keystore.alias}" storepass="${keystore.password}" keystore="${keystore}"/>   	
    </target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: delete-keystore                      
         - - - - - - - - - - - - - - - - - -->
    <target name="delete-keystore" depends="init-security">
            <delete file="${keystore}"/>
    </target>

	
	<!-- - - - - - - - - - - - - - - - - - 
          target: create-signing-key
         - - - - - - - - - - - - - - - - - -->
    <target name="create-signing-key">
		<genkey
			alias="${keystore.alias}"
			keystore="${keystore}"
			storepass="${keystore.password}"
			validity="3660" >
		<dname>
			<param name="CN" value="${common.name}"/><!--commonName - common name of a person-->
			<param name="OU" value="${organization.unit}"/><!--organizationUnit - small organization (e.g, department or division) name, e.g., "Purchasing"-->
			<param name="O" value="${organization}"/><!--organizationName - large organization name, e.g., "ABCSystems, Inc."-->
			<param name="C" value="${user.country}"/>
		</dname>
		</genkey>
    </target>
	
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: probe-for-jarsigner                      
         - - - - - - - - - - - - - - - - - -->
    <target name="probe-for-jarsigner">
		<property environment="env" />
		<condition property="jarsigner.present">
			<or>
				<available file="jarsigner" filepath="${env.PATH}"/>
				<available file="jarsigner.exe" filepath="${env.Path}"/>
			</or>
		</condition>
    </target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: probe-for-keystore   
    <target name="probe-for-keystore">
		<condition property="keystore.present">
		    <available file="${keystore}" />
		</condition>
    </target>
         - - - - - - - - - - - - - - - - - -->

	

	
	
	
</project>
