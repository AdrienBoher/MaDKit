<?xml version="1.0"?>
<!-- 
  Copyright 1998-2012 Fabien Michel, Olivier Gutknecht, Jacques Ferber
  
  This file is part of MaDKit.
  
  MaDKit is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.
  
  MaDKit is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU General Public License for more details.
  
  You should have received a copy of the GNU General Public License
  along with MaDKit. If not, see <http://www.gnu.org/licenses/>.
 -->

<!-- 
 This is ant build.xml file for building the MaDKit kernel jar file MaDKit V.5
 Author: Fabien Michel
 Version: 5.1
-->

<project name="madkit" default="jar" basedir=".">
	
	<!-- defining project general properties -->
	<tstamp prefix="time" />
	<property name="build.id" value="${time.DSTAMP}-${time.TSTAMP}" />
	<property name="src.dir" value="src"/>
	<property name="madkit.properties" value="madkit/kernel/madkit.properties"/>

	<property file="${src.dir}/${madkit.properties}" />

	<property name="resource.dir" value="resource"/>
	<property name="MDK.build.properties" value="madkitKernelBuild.properties"/>
	<property file="${resource.dir}/${MDK.build.properties}" />

	
	<!-- for french tuto-->
	<property name="madkit.old.version" value="5.0.0.16" />

	<import file="${madkit.ant.targets.file}" />



	<!-- ================================= 
          target: buildResources         
          //TODO seems to be useless...
    	<native2ascii src="${i18n.build.dir}" dest="${i18n.build.dir}" includes="*.properties" ext=".properties"/>
         ================================= -->
	<target name="buildResources">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${release.dir}" />
		<copy todir="${build.dir}">
			<fileset dir="${src.dir}" excludes="**/*.java" />
		</copy>
	</target>

	<!-- ================================= 
          target: src-zip              
         ================================= -->
	<target name="src-zip" description="the src zip">
		<zip destfile="${src.zip.location}" level="9">
			<zipfileset dir="${src.dir}" includes="**/*.java" />
		</zip>
	</target>


	<!-- ================================= 
          target: compile           TODO check javac task   
		<tstamp prefix="time"/>
		<property name="build.id" value="${time.DSTAMP}-${time.TSTAMP}"/>
			debuglevel="source"
			debuglevel="lines"
         ================================= -->
	<target name="compile" depends="buildResources">
		<javac debug="true" debuglevel="vars" includeAntRuntime="false" srcdir="${src.dir}" destdir="${build.dir}" deprecation="on">
		</javac>
	</target>

	<!-- ================================= 
          target: jar
         ================================= -->
	<target name="jar" depends="clean,compile,build-properties" description="Jars MaDKit kernel ">
		<jar destfile="${jar.file}" level="1" >
			<fileset dir="${build.dir}">
				<exclude name="**/package-info.class" />
				<exclude name="**/doc-files/**" />
			</fileset>

			<manifest>
				<attribute name="Description" value="${description}" />
				<attribute name="Version" value="${madkit.version}" />
				<attribute name="Author" value="${author.name}" />
				<attribute name="Build-Id" value="${build.id}" />
				<attribute name="Built-On" value="${timestamp.isoformat}" />
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Main-Class" value="${madkit.main.class}" />
			</manifest>
		</jar>

		<chmod file="${jar.file}" perm="ugo+x" />
		<echo>${jar.file} created !${line.separator}</echo>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: build-properties                      
         - - - - - - - - - - - - - - - - - -->
	<target name="build-properties">
		<tstamp>
			<format property="timestamp.isoformat" pattern="yyyy-mm-dd HH:mm:ss" locale="en" />
		</tstamp>
		<filterset begintoken="[[" endtoken="]]">
			<filter token="TIMESTAMP" value="${timestamp.isoformat}" />
		</filterset>
		<copy tofile="${build.dir}/${madkit.properties}" file="${src.dir}/${madkit.properties}" overwrite="true">
			<filterchain>
				<expandproperties />
			</filterchain>
		</copy>
	</target>


	<property name="test.dir" location="${build.dir}/test" />
	<property name="test.classes.dir" location="${test.dir}/classes" />
	<property name="test.data.dir" location="${test.dir}/data" />
	<property name="test.reports.dir" location="${test.dir}/reports" />

	<path id="compile.classpath">
		<fileset dir="lib">
			<include name="junit*.jar" />
		</fileset>
	</path>

	<path id="test.compile.classpath">
		<path refid="compile.classpath" />
		<pathelement location="${build.dir}" />
	</path>

	<path id="test.classpath">
		<path refid="test.compile.classpath" />
		<pathelement location="${test.classes.dir}" />
		<pathelement location="${basedir}" />
		<!--for images -->
	</path>

	<target name="test-init">
		<mkdir dir="${test.classes.dir}" />
		<delete dir="${test.data.dir}" />
		<delete dir="${test.reports.dir}" />
		<mkdir dir="${test.data.dir}" />
		<mkdir dir="${test.reports.dir}" />
	</target>

	<target name="test-compile" depends="compile,test-init">
		<javac destdir="${test.classes.dir}" includeAntRuntime="false" debug="true" srcdir="test">
			<classpath refid="test.compile.classpath" />
		</javac>
	</target>


	<!-- ================================= 
          target: junit              
         ================================= -->
	<target name="junit" depends="clean,test-compile" description="description">
		<junit printsummary="false" haltonfailure="false" maxmemory="512m">
			<classpath refid="test.classpath" />
			<formatter type="brief" usefile="false" />
			<formatter type="xml" />
			<batchtest todir="${test.data.dir}" fork="yes">
				<fileset dir="${test.classes.dir}" includes="**/*Test.class" />
			</batchtest>
		</junit>
		<junitreport todir="${test.data.dir}">
			<fileset dir="${test.data.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${test.reports.dir}" />
		</junitreport>
		<replace dir="${test.reports.dir}" token="Unit Test Result" value="MaDKit ${madkit.version} Unit Test Result" />
	</target>



	<!-- ================================= 
          target: javadoc              
			<packageset dir="${src.dir}" defaultexcludes="yes">
			      <exclude name="NetworkAgent.java"/>
			</packageset>
			<fileset dir="${src.dir}">
			  <include name="**/*.java"/>
			</fileset>
         ================================= -->
	<target name="javadoc" description="build the javadoc">
		<javadoc sourcepath="${src.dir}" destdir="${docs.api.dir}" access="protected" docfilessubdirs="true" author="true" version="true" use="true" linksource="no" windowtitle="${project.label}">
			<doctitle>
				<![CDATA[<h1>${project.label}</h1>]]></doctitle>
		<header>
			<![CDATA[<img src="{@docRoot}/doc-files/MaDKit.png" width="40" alt="MaDKit"/>]]></header>
		<bottom>
			<![CDATA[<i>${author.name}</i>]]></bottom>
	<link href="${sun.api.url}" />
</javadoc>
</target>

<!-- ================================= 
          target: clean              
         ================================= -->
<target name="clean" description="cleanup build directories">
<delete dir="${build.dir}" />
<delete dir="${logDirectory}" />
<delete dir="${release.dir}" />
<delete file="${jar.file}" failonerror="false" />
<delete file="${src.zip.location}" failonerror="false" />
<delete dir="${docs.api.dir}" />
<delete dir="${tuto.dir}" />
<delete file="${docs.dir}/French_Tutorial/MaDKit_Tutorial/${lib.dir}/${madkit.jar.name}" />
<delete>
	<fileset dir="${demo.dir}">
		<include name="**/*MaDKit-bees*" />
		<include name="**/*MaDKit-market-organization*" />
		<include name="**/*MaDKit-ping*" />
	</fileset>
</delete>
</target>

<!-- - - - - - - - - - - - - - - - - - 
          target: clean-demos-tutos                      
		<echo>Building MaDKit Demos</echo>
   		<exec executable="ant" spawn="true" dir="../MaDKit-demos" />
		<ant dir="../MaDKit-demos" target="clean" inheritall="false"/>
         - - - - - - - - - - - - - - - - - -->
<target name="clean-demos">
<echo>Cleaning MaDKit-demos</echo>
<exec executable="ant" spawn="false" dir="../MaDKit-demos">
	<arg value="clean" />
</exec>
</target>


<!-- ================================= 
          target: release              
	<chmod dir="${demo.dir}" perm="u+x" includes="**/*.jar"/>
	<chmod dir="${tuto.dir}" perm="u+x" includes="**/*.jar"/>
			<zipfileset dir="${release.dir}" includes="MaDKit-5-Desktop.jnlp"/>
         ================================= -->
<target name="release" depends="clean-demos,jar,sign-jar,javadoc,src-zip" description="build MaDKit release">
<echo> --- Build Release : MaDKit ${madkit.version}${line.separator}</echo>
<mkdir dir="${release.dir}" />

	<copy todir="${build.dir}">
		<fileset dir="${resource.dir}" excludes="COPYING,${MDK.build.properties}"/>
		<filterchain>
			<expandproperties />
		</filterchain>
	</copy>

<echo>Updating MaDKit Tutorial</echo>
<copy todir="${docs.dir}/French_Tutorial/MaDKit_Tutorial/${lib.dir}" file="${jar.file}" />
<replace file="${docs.dir}/French_Tutorial/MaDKit_Tutorial/.classpath" token="${madkit.old.version}" value="${madkit.version}" />

<echo>Building MaDKit Demos</echo>
<exec executable="ant" spawn="false" dir="../MaDKit-demos" />

<zip destfile="${release.dir}/MaDKit-${madkit.version}.zip" level="9">
	<zipfileset dir="${docs.dir}" prefix="${docs.dir}" />
	<zipfileset dir="${build.dir}" includes="README.html" />
	<zipfileset dir="${build.dir}" includes="VERSION,${doc.html},build.xml" prefix="${docs.dir}" />
	<zipfileset file="${jar.file}" filemode="755" />
	<zipfileset file="${resource.dir}/COPYING" />
	<zipfileset dir="${demo.dir}" prefix="${demo.dir}" filemode="755" />
</zip>
</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: test                      
         - - - - - - - - - - - - - - - - - -->
    <target name="test">
            
    </target>

	<!-- ================================= 
          target:       ftp-push        
         ================================= -->
	<target name="ftp-push" depends="jar,sign-jar">
		<property name="server" value="MDK-jnlps" />
		<property name="ftp.propfile" location="${user.home}/.mk_pass/${server}" />
		<loadproperties srcFile="${ftp.propfile}" />
		<echo>FTP upload of MDK JNLP : target is ${server} ${ftp.server} ${ftp.dir}</echo>
		<ftp server="${ftp.server}" userid="${ftp.user}" password="${ftp.password}" action="put" remotedir="${ftp.dir}">
			<fileset dir="${release.dir}" includes="*.gz" />
		</ftp>
	</target>
</project>
