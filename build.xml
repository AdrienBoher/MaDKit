<?xml version="1.0"?>
<!-- 
  Copyright 1998-2011 Fabien Michel, Olivier Gutknecht, Jacques Ferber
  
  This file is part of MadKit.
  
  MadKit is free software: you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.
  
  MadKit is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU Lesser General Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public License
  along with MadKit. If not, see <http://www.gnu.org/licenses/>.
 -->
 
<!-- 
 This is ant build.xml file for building the MadKit kernel jar file MadKit V.5
 Author: Fabien Michel
 Version: 5.0
-->

<project name="madkitkernel" default="jar" basedir=".">
	
	<!-- using madkit kernel building properties file -->
	<tstamp prefix="time"/>
	<property name="build.id" value="${time.DSTAMP}-${time.TSTAMP}"/>
	<property file="src/madkit/kernel/madkitKernel.properties"/>
	<property file="madkitKernelBuild.properties"/>
	<property name="executable.name" value="${desktop.name}"/>
	<property name="i18n.build.dir" value="${build.dir}/madkit/i18n"/>
	<property name="madkit.old.version" value="5.0.0.14"/>	<!-- for tuto-->

	<import file="${madkit.ant.targets.file}"/>

	

	<!-- ================================= 
          target: buildResources         
          //TODO seems to be useless...
    	<native2ascii src="${i18n.build.dir}" dest="${i18n.build.dir}" includes="*.properties" ext=".properties"/>
         ================================= -->
	<target name="buildResources">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${release.dir}"/>
		  <copy todir="${build.dir}">
		    <fileset dir="${src.dir}" excludes="**/*.java"/>
		  </copy>
	</target>

	<!-- ================================= 
          target: compile           TODO check javac task   
		<tstamp prefix="time"/>
		<property name="build.id" value="${time.DSTAMP}-${time.TSTAMP}"/>
			debuglevel="source"
			debuglevel="lines"
         ================================= -->
	<target name="compile" depends="buildResources">
		<javac
			debug="true"
			debuglevel="vars"
			includeAntRuntime="false"
			srcdir="${src.dir}"
			destdir="${build.dir}"
			deprecation="on">
		</javac>
	</target>
	
	<!-- ================================= 
          target: jar
				<attribute name="Madkit-Args" value=""/>
				<attribute name="Sealed" value="true"/>
    			<include name="${mk.properties.file}"/>
         ================================= -->
	<target name="jar" depends="clean,compile,build-properties" description="Jars MadKit kernel ">
		<jar destfile="${jar.file}" index="true" compress="false">
			<fileset dir="${build.dir}">
				<exclude name="**/package-info.class"/>
				<exclude name="**/doc-files/**"/>
			</fileset>
			<fileset dir="${lib.dir}" includes="jar-in-jar-loader.zip"/>

			<manifest>
				<attribute name="Description" value="${description}"/>
				<attribute name="Version" value="${madkit.version}"/>
				<attribute name="Author" value="${author.name}"/>
				<attribute name="Build-Id" value="${build.id}"/>
				<attribute name="Built-On" value="${timestamp.isoformat}"/>
				<attribute name="Built-By" value="${user.name}"/>
				<attribute name="Main-Class" value="${madkit.main.class}"/>
			</manifest>
		</jar>
		
		<chmod file="${jar.file}" perm="ugo+x"/>
        <echo>${jar.file} created !${line.separator}</echo>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: build-properties                      
         - - - - - - - - - - - - - - - - - -->
    <target name="build-properties">
		<tstamp>
			<format property="timestamp.isoformat"
		    pattern="yyyy-mm-dd HH:mm:ss" locale="en"/>
		</tstamp>
		<filterset begintoken="[[" endtoken ="]]">
			<filter token="TIMESTAMP" value="${timestamp.isoformat}"/>
		</filterset>
   		<copy tofile="${build.dir}/${madkitKernel.properties}" file="${src.dir}/${madkitKernel.properties}" overwrite="true">
   		  <filterchain>
   		    <expandproperties/>
   		  </filterchain>
   		</copy>	
    </target>
	
	
	<property name="test.dir" location="${build.dir}/test" />
	<property name="test.classes.dir" location="${test.dir}/classes" />
	<property name="test.data.dir" location="${test.dir}/data" />
	<property name="test.reports.dir" location="${test.dir}/reports" />
	
	<path id="compile.classpath">
		<fileset dir="lib">
		<include name="*.jar"/>
		</fileset>
	</path>
	
	<path id="test.compile.classpath">
	<path refid="compile.classpath"/>
	<pathelement location="${build.dir}"/>
	</path>

	<path id="test.classpath">
	<path refid="test.compile.classpath"/>
	<pathelement location="${test.classes.dir}"/>
	<pathelement location="${basedir}"/><!--for images -->
	</path>
	
	<target name="test-init">
	<mkdir dir="${test.classes.dir}"/>
	<delete dir="${test.data.dir}"/>
	<delete dir="${test.reports.dir}"/>
	<mkdir dir="${test.data.dir}"/>
	<mkdir dir="${test.reports.dir}"/>
	</target>
	
	<target name="test-compile" depends="compile,test-init">
	<javac destdir="${test.classes.dir}"
		includeAntRuntime="false"
	debug="true"
	srcdir="test">
	<classpath refid="test.compile.classpath"/>
	</javac>
	</target>


	<!-- ================================= 
          target: junit              
         ================================= -->
    <target name="junit" depends="clean,test-compile" description="description">
    	<junit printsummary="false" haltonfailure="false" maxmemory="512m">
	    	<classpath refid="test.classpath"/>
			<formatter type="brief" usefile="false"/>
			<formatter type="xml"/>
	    	<batchtest todir="${test.data.dir}" fork="yes">
		    	<fileset dir="${test.classes.dir}"
		    	includes="**/*Test.class"/>
	    	</batchtest>
    	</junit>
    	<junitreport todir="${test.data.dir}">
	    	<fileset dir="${test.data.dir}">
	    	<include name="TEST-*.xml"/>
	    	</fileset>
	    	<report format="frames"
	    	todir="${test.reports.dir}"/>
    	</junitreport>
    	<replace dir="${test.reports.dir}" token="Unit Test Result" value="MadKit ${madkit.version} Unit Test Result"/>    	
    </target>

	
	
	<!-- ================================= 
          target: javadoc              
			<packageset dir="${src.dir}" defaultexcludes="yes">
			      <exclude name="NetworkAgent.java"/>
			</packageset>
			<fileset dir="${src.dir}">
			  <include name="**/*.java"/>
			</fileset>
         ================================= -->
	<target name="javadoc" description="build the javadoc">
		<javadoc sourcepath="${src.dir}" destdir="${docs.api.dir}" access="protected" docfilessubdirs="true" author="true" version="true" use="true" linksource="no" windowtitle="${project.label}">
		    <doctitle><![CDATA[<h1>${project.label}</h1>]]></doctitle>
		    <bottom><![CDATA[<i>${author.name}</i>]]></bottom>
			<link href="${sun.api.url}"/>
		</javadoc>
	</target>

	<!-- ================================= 
          target: clean              
         ================================= -->
	<target name="clean" description="cleanup build directories">
		<delete dir="${build.dir}"/>
		<delete dir="${release.dir}"/>
		<delete file="${jar.file}" failonerror="false"/>
		<delete dir="${docs.api.dir}"/>
		<delete dir="${tuto.dir}" includes="**/*.zip,**/*.jar"/>
		<delete file="${docs.dir}/French_Tutorial/MadKit_Tutorial/${lib.dir}/${madkit.jar.name}"/>
		<delete>
			<fileset dir="${demo.dir}">
				<include name="**/*MadKit-Bees*"/>
			    <include name="**/*MadKit-Market*"/>
			    <include name="**/*MadKit-Ping*"/>
			</fileset>
		</delete>
	</target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: clean-demos-tutos                      
         - - - - - - - - - - - - - - - - - -->
    <target name="clean-demos-tutos">
		<ant dir="../MadKit_Demos" target="clean" inheritall="false"/>
    </target>


	
	
	<!-- ================================= 
          target: release              
	<chmod dir="${demo.dir}" perm="u+x" includes="**/*.jar"/>
	<chmod dir="${tuto.dir}" perm="u+x" includes="**/*.jar"/>
			<zipfileset dir="${release.dir}" includes="MadKit-5-Desktop.jnlp"/>
         ================================= -->
   <target name="release" depends="clean-demos-tutos,jar,sign-jar,javadoc" description="build MadKit release">
   		<echo> --- Build Release : MadKit ${madkit.version}${line.separator}</echo>
		<mkdir dir="${release.dir}"/>
		<copy todir="${build.dir}" file="README.html">
		  <filterchain>
		    <expandproperties/>
		  </filterchain>
		</copy>	
		<copy todir="${build.dir}" file="VERSION">
		  <filterchain>
		    <expandproperties/>
		  </filterchain>
		</copy>

   		<echo>Updating MadKit Tutorial</echo>   		
		<copy todir="${docs.dir}/French_Tutorial/MadKit_Tutorial/${lib.dir}" file="${jar.file}"/>
		<replace file="${docs.dir}/French_Tutorial/MadKit_Tutorial/.classpath" token="${madkit.old.version}" value="${madkit.version}"/>
   		
   		<echo>Building MadKit HowTo</echo>
		<ant dir="../MadKit_HowTo" inheritall="false"/>
		<ant dir="../MadKit_Demos" inheritall="false"/>

   		<zip destfile="${release.dir}/MadKit-${madkit.version}.zip" level="9">
			<zipfileset dir="${docs.dir}" prefix="${docs.dir}"/>
			<zipfileset dir="${build.dir}" includes="README.html"/>
			<zipfileset dir="${build.dir}" includes="VERSION" prefix="${docs.dir}"/>
			<zipfileset file="${jar.file}"/>
			<zipfileset file="COPYING.LESSER"/>
			<zipfileset dir="${demo.dir}" prefix="${demo.dir}" filemode="755"/>
		</zip>
    </target>
	
	<!-- ================================= 
          target: push              
         ================================= -->
    <target name="push" depends="" description="description">
        
    </target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: update-to-last-kernel                      
    	<ftp server="${ftp.server}" 
    		userid="${ftp.user}"
			password="${ftp.password}"
    		action="mkdir"
    		remotedir="${ftp.dir}"/>
         - - - - - - - - - - - - - - - - - -->
    <target name="publish-kernel" depends="ftp-init">
    	<fileset id="ftp.upload.fileset"
	    	dir="${release.dir}">
	    	<include name="${madkit.jar.name}"/>
    	</fileset>
    	<echo>FTP target is ${ftp.server}</echo>
   	<ftp server="${ftp.server}"
    		userid="${ftp.user}"
    		password="${ftp.password}"
    		action="put"
    		remotedir="${ftp.dir}/MadKit-${madkit.version}">
    	<fileset refid="ftp.upload.fileset"/>
    	</ftp>
    	<fileset id="ftp.upload.fileset"
	    	dir="${release.dir}">
	    	<include name="${desktop.jnlp.file}"/>
    	</fileset>
    	<echo>FTP target is ${ftp.server}</echo>
   	<ftp server="${ftp.server}"
    		userid="${ftp.user}"
    		password="${ftp.password}"
    		action="put"
    		remotedir="${ftp.dir}/jnlps">
    	<fileset refid="ftp.upload.fileset"/>
    	</ftp>
    </target>
	
	<target name="ftp-init">
		<fail unless="server">Set the "server" property!</fail>
		<property name="ftp.propfile" location="${user.home}/.mk_pass/${server}" />
		<loadproperties srcFile="${ftp.propfile}" />
	</target>
	
	<!-- ================================= 
          target: desktop-knlp              
		<delete file="${jnlp.jar}"/>
        <exec executable="pack200" dir="${release.dir}">
            <arg value="- -repack"/>
            <arg value="${madkit.jar.name}"/>
        </exec>
        <echo>Creating ${jnlp.jar}.pack.gz !${line.separator}</echo>
	    <exec executable="pack200" dir="${release.dir}">
	        <arg value="- -modification-time=latest"/>
	        <arg value="- -deflate-hint=true"/>
            <arg value="${jnlp.jar.file}.pack.gz"/>
            <arg value="${jnlp.jar.file}"/>
	    </exec>
    <target name="desktop-jnlp" depends="jar" description="build the desktop deploying jar file">
		<antcall target="sign-jar"/>
        <echo>${jnlp.jar} created and signed !${line.separator}</echo>
    </target>
         ================================= -->

</project>
